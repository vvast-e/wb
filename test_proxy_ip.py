#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ IP –∞–¥—Ä–µ—Å–∞ —á–µ—Ä–µ–∑ –ø—Ä–æ–∫—Å–∏
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —á—Ç–æ –ø—Ä–æ–∫—Å–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥—Ä—É–≥–æ–π IP
"""

import asyncio
import json
from datetime import datetime

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–∫—Å–∏
PROXY_CONFIG = {
    'scheme': 'http',
    'host': 'p15184.ltespace.net',
    'port': 15184,
    'username': 'uek7t66y',
    'password': 'zbygddap'
}

# –í–∞—à –ª–æ–∫–∞–ª—å–Ω—ã–π IP
YOUR_LOCAL_IP = "192.168.1.76"

async def check_ip_with_curl_cffi():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ IP —á–µ—Ä–µ–∑ curl_cffi"""
    print("üîç –ü–†–û–í–ï–†–ö–ê IP –ß–ï–†–ï–ó CURL_CFFI")
    print("-" * 40)
    
    try:
        from curl_cffi import requests as curl_requests
        
        proxy_url = f"http://{PROXY_CONFIG['username']}:{PROXY_CONFIG['password']}@{PROXY_CONFIG['host']}:{PROXY_CONFIG['port']}"
        
        session = curl_requests.Session(
            impersonate="chrome120",
            proxies={
                'http': proxy_url,
                'https': proxy_url
            },
            timeout=30
        )
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º IP
        response = await asyncio.to_thread(
            session.get, 
            'https://httpbin.org/ip',
            headers={'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36'}
        )
        
        if response.status_code == 200:
            ip_data = response.json()
            proxy_ip = ip_data.get('origin', 'Unknown')
            print(f"‚úÖ curl_cffi IP: {proxy_ip}")
            return proxy_ip
        else:
            print(f"‚ùå curl_cffi –æ—à–∏–±–∫–∞: {response.status_code}")
            return None
            
    except Exception as e:
        print(f"‚ùå curl_cffi –æ—à–∏–±–∫–∞: {e}")
        return None

async def check_ip_with_httpx():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ IP —á–µ—Ä–µ–∑ httpx"""
    print("\nüîç –ü–†–û–í–ï–†–ö–ê IP –ß–ï–†–ï–ó HTTPX")
    print("-" * 40)
    
    try:
        import httpx
        
        proxy_url = f"http://{PROXY_CONFIG['username']}:{PROXY_CONFIG['password']}@{PROXY_CONFIG['host']}:{PROXY_CONFIG['port']}"
        
        async with httpx.AsyncClient(
            proxies={"http://": proxy_url, "https://": proxy_url},
            timeout=30.0
        ) as client:
            
            response = await client.get(
                'https://httpbin.org/ip',
                headers={'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36'}
            )
            
            if response.status_code == 200:
                ip_data = response.json()
                proxy_ip = ip_data.get('origin', 'Unknown')
                print(f"‚úÖ httpx IP: {proxy_ip}")
                return proxy_ip
            else:
                print(f"‚ùå httpx –æ—à–∏–±–∫–∞: {response.status_code}")
                return None
                
    except Exception as e:
        print(f"‚ùå httpx –æ—à–∏–±–∫–∞: {e}")
        return None

async def check_ip_without_proxy():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ IP –±–µ–∑ –ø—Ä–æ–∫—Å–∏"""
    print("\nüîç –ü–†–û–í–ï–†–ö–ê IP –ë–ï–ó –ü–†–û–ö–°–ò")
    print("-" * 40)
    
    try:
        import httpx
        
        async with httpx.AsyncClient(timeout=30.0) as client:
            response = await client.get(
                'https://httpbin.org/ip',
                headers={'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36'}
            )
            
            if response.status_code == 200:
                ip_data = response.json()
                direct_ip = ip_data.get('origin', 'Unknown')
                print(f"‚úÖ –ü—Ä—è–º–æ–π IP: {direct_ip}")
                return direct_ip
            else:
                print(f"‚ùå –ü—Ä—è–º–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –æ—à–∏–±–∫–∞: {response.status_code}")
                return None
                
    except Exception as e:
        print(f"‚ùå –ü—Ä—è–º–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –æ—à–∏–±–∫–∞: {e}")
        return None

async def test_ozon_with_proxy():
    """–¢–µ—Å—Ç Ozon —Å –ø—Ä–æ–∫—Å–∏"""
    print("\nüåê –¢–ï–°–¢ OZON –° –ü–†–û–ö–°–ò")
    print("-" * 40)
    
    try:
        from curl_cffi import requests as curl_requests
        
        proxy_url = f"http://{PROXY_CONFIG['username']}:{PROXY_CONFIG['password']}@{PROXY_CONFIG['host']}:{PROXY_CONFIG['port']}"
        
        session = curl_requests.Session(
            impersonate="chrome120",
            proxies={
                'http': proxy_url,
                'https': proxy_url
            },
            timeout=30
        )
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º Ozon
        test_url = "https://www.ozon.ru/"
        
        response = await asyncio.to_thread(
            session.get, 
            test_url,
            headers={
                'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36',
                'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',
                'Accept-Language': 'ru-RU,ru;q=0.9,en;q=0.8',
                'Accept-Encoding': 'gzip, deflate, br',
                'DNT': '1',
                'Connection': 'keep-alive',
                'Upgrade-Insecure-Requests': '1',
            }
        )
        
        print(f"üìä Ozon —Å—Ç–∞—Ç—É—Å: {response.status_code}")
        print(f"üìè –†–∞–∑–º–µ—Ä –æ—Ç–≤–µ—Ç–∞: {len(response.text)} —Å–∏–º–≤–æ–ª–æ–≤")
        
        if response.status_code == 200:
            if "ozon" in response.text.lower():
                print("‚úÖ Ozon –¥–æ—Å—Ç—É–ø–µ–Ω —á–µ—Ä–µ–∑ –ø—Ä–æ–∫—Å–∏!")
                return True
            else:
                print("‚ö†Ô∏è –û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω, –Ω–æ –Ω–µ –ø–æ—Ö–æ–∂ –Ω–∞ Ozon")
                return False
        elif response.status_code == 403:
            print("‚ùå 403 Forbidden - –∞–Ω—Ç–∏–±–æ—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª")
            return False
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ {response.status_code}")
            return False
            
    except Exception as e:
        print(f"‚ùå Ozon —Ç–µ—Å—Ç –æ—à–∏–±–∫–∞: {e}")
        return False

async def test_ozon_without_proxy():
    """–¢–µ—Å—Ç Ozon –±–µ–∑ –ø—Ä–æ–∫—Å–∏"""
    print("\nüåê –¢–ï–°–¢ OZON –ë–ï–ó –ü–†–û–ö–°–ò")
    print("-" * 40)
    
    try:
        import httpx
        
        async with httpx.AsyncClient(timeout=30.0) as client:
            response = await client.get(
                "https://www.ozon.ru/",
                headers={
                    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36',
                    'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',
                    'Accept-Language': 'ru-RU,ru;q=0.9,en;q=0.8',
                    'Accept-Encoding': 'gzip, deflate, br',
                    'DNT': '1',
                    'Connection': 'keep-alive',
                    'Upgrade-Insecure-Requests': '1',
                }
            )
            
            print(f"üìä Ozon —Å—Ç–∞—Ç—É—Å: {response.status_code}")
            print(f"üìè –†–∞–∑–º–µ—Ä –æ—Ç–≤–µ—Ç–∞: {len(response.text)} —Å–∏–º–≤–æ–ª–æ–≤")
            
            if response.status_code == 200:
                if "ozon" in response.text.lower():
                    print("‚úÖ Ozon –¥–æ—Å—Ç—É–ø–µ–Ω –±–µ–∑ –ø—Ä–æ–∫—Å–∏!")
                    return True
                else:
                    print("‚ö†Ô∏è –û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω, –Ω–æ –Ω–µ –ø–æ—Ö–æ–∂ –Ω–∞ Ozon")
                    return False
            elif response.status_code == 403:
                print("‚ùå 403 Forbidden - –∞–Ω—Ç–∏–±–æ—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª")
                return False
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ {response.status_code}")
                return False
                
    except Exception as e:
        print(f"‚ùå Ozon —Ç–µ—Å—Ç –æ—à–∏–±–∫–∞: {e}")
        return False

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üåê –¢–ï–°–¢ –ü–†–û–í–ï–†–ö–ò IP –ê–î–†–ï–°–ê –ò –ü–†–û–ö–°–ò")
    print("=" * 50)
    print(f"‚è∞ –í—Ä–µ–º—è: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    print(f"üè† –í–∞—à –ª–æ–∫–∞–ª—å–Ω—ã–π IP: {YOUR_LOCAL_IP}")
    print(f"üåê –ü—Ä–æ–∫—Å–∏: {PROXY_CONFIG['host']}:{PROXY_CONFIG['port']}")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º IP –∞–¥—Ä–µ—Å–∞
    curl_ip = await check_ip_with_curl_cffi()
    httpx_ip = await check_ip_with_httpx()
    direct_ip = await check_ip_without_proxy()
    
    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    print("\nüìä –ê–ù–ê–õ–ò–ó IP –ê–î–†–ï–°–û–í")
    print("-" * 40)
    
    if curl_ip and curl_ip != YOUR_LOCAL_IP:
        print(f"‚úÖ curl_cffi –ø—Ä–æ–∫—Å–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç! IP: {curl_ip}")
        curl_proxy_works = True
    else:
        print(f"‚ùå curl_cffi –ø—Ä–æ–∫—Å–∏ –ù–ï —Ä–∞–±–æ—Ç–∞–µ—Ç! IP: {curl_ip}")
        curl_proxy_works = False
    
    if httpx_ip and httpx_ip != YOUR_LOCAL_IP:
        print(f"‚úÖ httpx –ø—Ä–æ–∫—Å–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç! IP: {httpx_ip}")
        httpx_proxy_works = True
    else:
        print(f"‚ùå httpx –ø—Ä–æ–∫—Å–∏ –ù–ï —Ä–∞–±–æ—Ç–∞–µ—Ç! IP: {httpx_ip}")
        httpx_proxy_works = False
    
    if direct_ip:
        print(f"üì° –ü—Ä—è–º–æ–π IP: {direct_ip}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º Ozon
    ozon_with_proxy = await test_ozon_with_proxy()
    ozon_without_proxy = await test_ozon_without_proxy()
    
    # –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
    print("\n" + "=" * 50)
    print("üìä –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢")
    print("=" * 50)
    
    print(f"üåê curl_cffi –ø—Ä–æ–∫—Å–∏: {'‚úÖ –†–ê–ë–û–¢–ê–ï–¢' if curl_proxy_works else '‚ùå –ù–ï –†–ê–ë–û–¢–ê–ï–¢'}")
    print(f"üåê httpx –ø—Ä–æ–∫—Å–∏: {'‚úÖ –†–ê–ë–û–¢–ê–ï–¢' if httpx_proxy_works else '‚ùå –ù–ï –†–ê–ë–û–¢–ê–ï–¢'}")
    print(f"üõí Ozon —Å –ø—Ä–æ–∫—Å–∏: {'‚úÖ –î–û–°–¢–£–ü–ï–ù' if ozon_with_proxy else '‚ùå –ó–ê–ë–õ–û–ö–ò–†–û–í–ê–ù'}")
    print(f"üõí Ozon –±–µ–∑ –ø—Ä–æ–∫—Å–∏: {'‚úÖ –î–û–°–¢–£–ü–ï–ù' if ozon_without_proxy else '‚ùå –ó–ê–ë–õ–û–ö–ò–†–û–í–ê–ù'}")
    
    # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    print("\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
    
    if not curl_proxy_works and not httpx_proxy_works:
        print("‚ùå –ü–†–û–ö–°–ò –ù–ï –†–ê–ë–û–¢–ê–ï–¢!")
        print("   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–∫—Å–∏")
        print("   - –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –ø—Ä–æ–∫—Å–∏ –∞–∫—Ç–∏–≤–µ–Ω")
        print("   - –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π –ø—Ä–æ–∫—Å–∏")
    elif ozon_without_proxy and not ozon_with_proxy:
        print("‚ö†Ô∏è –ü–†–û–ö–°–ò –†–ê–ë–û–¢–ê–ï–¢, –ù–û OZON –ë–õ–û–ö–ò–†–£–ï–¢ –ü–†–û–ö–°–ò!")
        print("   - –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π –ø—Ä–æ–∫—Å–∏")
        print("   - –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ä–µ–∑–∏–¥–µ–Ω—Ç–Ω—ã–π –º–æ–±–∏–ª—å–Ω—ã–π –ø—Ä–æ–∫—Å–∏")
        print("   - –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –±–µ–∑ –ø—Ä–æ–∫—Å–∏")
    elif ozon_with_proxy:
        print("üéâ –í–°–ï –†–ê–ë–û–¢–ê–ï–¢!")
        print("   - –ü—Ä–æ–∫—Å–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        print("   - Ozon –¥–æ—Å—Ç—É–ø–µ–Ω —á–µ—Ä–µ–∑ –ø—Ä–æ–∫—Å–∏")
        print("   - –ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–∞—Ä—Å–µ—Ä")
    else:
        print("ü§î –°–ú–ï–®–ê–ù–ù–´–ï –†–ï–ó–£–õ–¨–¢–ê–¢–´")
        print("   - –ù—É–∂–Ω–æ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ")
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    results = {
        'timestamp': datetime.now().isoformat(),
        'local_ip': YOUR_LOCAL_IP,
        'proxy_config': PROXY_CONFIG,
        'curl_cffi_ip': curl_ip,
        'httpx_ip': httpx_ip,
        'direct_ip': direct_ip,
        'curl_proxy_works': curl_proxy_works,
        'httpx_proxy_works': httpx_proxy_works,
        'ozon_with_proxy': ozon_with_proxy,
        'ozon_without_proxy': ozon_without_proxy
    }
    
    timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
    result_file = f"proxy_test_result_{timestamp}.json"
    
    with open(result_file, "w", encoding="utf-8") as f:
        json.dump(results, f, ensure_ascii=False, indent=2)
    
    print(f"\nüíæ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: {result_file}")

if __name__ == "__main__":
    asyncio.run(main())
