#!/usr/bin/env python3
"""
–¢–µ—Å—Ç HTML –ø–∞—Ä—Å–µ—Ä–∞ Ozon - –æ–±—Ö–æ–¥ 403 —á–µ—Ä–µ–∑ –ø–∞—Ä—Å–∏–Ω–≥ HTML —Å—Ç—Ä–∞–Ω–∏—Ü
"""

import asyncio
import json
from datetime import datetime

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–∫—Å–∏
PROXY_CONFIG = {
    'scheme': 'http',
    'host': 'p15184.ltespace.net',
    'port': 15184,
    'username': 'uek7t66y',
    'password': 'zbygddap'
}

# URL —Ç–æ–≤–∞—Ä–∞
TEST_PRODUCT_URL = "https://www.ozon.ru/product/termozashchitnyy-sprey-dlya-volos-uvlazhnyayushchiy-nesmyvaemyy-uhod-dlya-legkogo-2128381166/?__rr=3&at=EqtkV5nBRhyWXGM9iY1OEWVhDKJLXvsrZVAMkFZK70J2"

async def test_html_parser():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç HTML –ø–∞—Ä—Å–µ—Ä"""
    print("üåê –¢–ï–°–¢ HTML –ü–ê–†–°–ï–†–ê OZON")
    print("=" * 50)
    print(f"üì¶ URL: {TEST_PRODUCT_URL}")
    print(f"üåê –ü—Ä–æ–∫—Å–∏: {PROXY_CONFIG['host']}:{PROXY_CONFIG['port']}")
    print("=" * 50)
    
    try:
        from utils.ozon_html_parser import OzonHTMLParser
        
        print("‚úÖ HTML –ø–∞—Ä—Å–µ—Ä –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
        
        async with OzonHTMLParser(PROXY_CONFIG) as parser:
            print("‚úÖ HTML –ø–∞—Ä—Å–µ—Ä –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
            
            # –¢–µ—Å—Ç 1: –ü–æ–ª—É—á–µ–Ω–∏–µ HTML —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            print("\nüìÑ –¢–ï–°–¢ 1: –ü–æ–ª—É—á–µ–Ω–∏–µ HTML —Å—Ç—Ä–∞–Ω–∏—Ü—ã")
            print("-" * 40)
            
            html = await parser.get_product_page(TEST_PRODUCT_URL)
            
            if html:
                print("‚úÖ HTML —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –ø–æ–ª—É—á–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
                print(f"üìè –†–∞–∑–º–µ—Ä: {len(html)} —Å–∏–º–≤–æ–ª–æ–≤")
                
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º HTML –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
                timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
                html_file = f"ozon_html_page_{timestamp}.html"
                with open(html_file, "w", encoding="utf-8") as f:
                    f.write(html)
                print(f"üíæ HTML —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤: {html_file}")
                
                # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
                if "–æ—Ç–∑—ã–≤" in html.lower() or "review" in html.lower():
                    print("‚úÖ –ù–∞–π–¥–µ–Ω—ã —É–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ—Ç–∑—ã–≤–æ–≤ –≤ HTML")
                else:
                    print("‚ö†Ô∏è –û—Ç–∑—ã–≤—ã –≤ HTML –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
                
                if "—Ü–µ–Ω–∞" in html.lower() or "price" in html.lower() or "‚ÇΩ" in html:
                    print("‚úÖ –ù–∞–π–¥–µ–Ω—ã —É–ø–æ–º–∏–Ω–∞–Ω–∏—è —Ü–µ–Ω –≤ HTML")
                else:
                    print("‚ö†Ô∏è –¶–µ–Ω—ã –≤ HTML –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
                
                html_success = True
            else:
                print("‚ùå HTML —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –ø–æ–ª—É—á–µ–Ω–∞")
                html_success = False
            
            # –¢–µ—Å—Ç 2: –ü–∞—Ä—Å–∏–Ω–≥ —Ü–µ–Ω—ã
            print("\nüí∞ –¢–ï–°–¢ 2: –ü–∞—Ä—Å–∏–Ω–≥ —Ü–µ–Ω—ã –∏–∑ HTML")
            print("-" * 40)
            
            price_info = await parser.get_product_price(TEST_PRODUCT_URL)
            
            if price_info and price_info.get('current_price'):
                print("‚úÖ –¶–ï–ù–ê –ò–ó–í–õ–ï–ß–ï–ù–ê –ò–ó HTML!")
                print(f"   üí∞ –¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞: {price_info['current_price']} {price_info.get('currency', 'RUB')}")
                
                if price_info.get('original_price'):
                    print(f"   üí∏ –°—Ç–∞—Ä–∞—è —Ü–µ–Ω–∞: {price_info['original_price']} {price_info.get('currency', 'RUB')}")
                
                if price_info.get('discount_percent'):
                    print(f"   üéØ –°–∫–∏–¥–∫–∞: {price_info['discount_percent']}%")
                
                price_success = True
            else:
                print("‚ùå –¶–ï–ù–ê –ù–ï –ò–ó–í–õ–ï–ß–ï–ù–ê")
                print(f"   –û—Ç–≤–µ—Ç: {price_info}")
                price_success = False
            
            # –¢–µ—Å—Ç 3: –ü–∞—Ä—Å–∏–Ω–≥ –æ—Ç–∑—ã–≤–æ–≤
            print("\nüìù –¢–ï–°–¢ 3: –ü–∞—Ä—Å–∏–Ω–≥ –æ—Ç–∑—ã–≤–æ–≤ –∏–∑ HTML")
            print("-" * 40)
            
            reviews = await parser.get_product_reviews(TEST_PRODUCT_URL)
            
            if reviews and len(reviews) > 0:
                print(f"‚úÖ –û–¢–ó–´–í–´ –ò–ó–í–õ–ï–ß–ï–ù–´ –ò–ó HTML!")
                print(f"   üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–∑—ã–≤–æ–≤: {len(reviews)}")
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3 –æ—Ç–∑—ã–≤–∞
                print("\n   üìÑ –ü–†–ò–ú–ï–†–´ –û–¢–ó–´–í–û–í:")
                for i, review in enumerate(reviews[:3], 1):
                    print(f"\n   –û—Ç–∑—ã–≤ {i}:")
                    print(f"     üë§ –ê–≤—Ç–æ—Ä: {review.get('author', 'N/A')}")
                    print(f"     ‚≠ê –†–µ–π—Ç–∏–Ω–≥: {review.get('rating', 'N/A')}/5")
                    print(f"     üìù –¢–µ–∫—Å—Ç: {review.get('text', 'N/A')[:80]}...")
                    
                    if review.get('pros'):
                        print(f"     ‚úÖ –ü–ª—é—Å—ã: {review.get('pros', 'N/A')[:50]}...")
                    
                    if review.get('cons'):
                        print(f"     ‚ùå –ú–∏–Ω—É—Å—ã: {review.get('cons', 'N/A')[:50]}...")
                
                # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ä–µ–π—Ç–∏–Ω–≥–∞–º
                ratings = [r['rating'] for r in reviews if r.get('rating')]
                if ratings:
                    avg_rating = sum(ratings) / len(ratings)
                    print(f"\n   üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
                    print(f"     ‚≠ê –°—Ä–µ–¥–Ω–∏–π —Ä–µ–π—Ç–∏–Ω–≥: {avg_rating:.2f}/5")
                    print(f"     üìà –í—Å–µ–≥–æ –æ—Ü–µ–Ω–æ–∫: {len(ratings)}")
                
                reviews_success = True
            else:
                print("‚ùå –û–¢–ó–´–í–´ –ù–ï –ò–ó–í–õ–ï–ß–ï–ù–´")
                print(f"   –û—Ç–≤–µ—Ç: {reviews}")
                reviews_success = False
            
            # –¢–µ—Å—Ç 4: –ü–æ–ª–Ω—ã–π –∞–Ω–∞–ª–∏–∑
            print("\nüîç –¢–ï–°–¢ 4: –ü–æ–ª–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Ç–æ–≤–∞—Ä–∞")
            print("-" * 40)
            
            full_result = await parser.get_product_full_info(TEST_PRODUCT_URL)
            
            if full_result:
                print("‚úÖ –ü–û–õ–ù–´–ô –ê–ù–ê–õ–ò–ó –í–´–ü–û–õ–ù–ï–ù!")
                print(f"   üÜî ID —Ç–æ–≤–∞—Ä–∞: {full_result.get('product_id', 'N/A')}")
                print(f"   üåê URL: {full_result.get('url', 'N/A')}")
                print(f"   ‚è∞ –í—Ä–µ–º—è –ø–∞—Ä—Å–∏–Ω–≥–∞: {full_result.get('parsed_at', 'N/A')}")
                
                if full_result.get('price_info'):
                    price = full_result['price_info']
                    print(f"   üí∞ –¶–µ–Ω–∞: {price.get('current_price', 'N/A')} {price.get('currency', 'RUB')}")
                
                if full_result.get('reviews_count', 0) > 0:
                    print(f"   üìù –û—Ç–∑—ã–≤–æ–≤: {full_result['reviews_count']}")
                    print(f"   ‚≠ê –°—Ä–µ–¥–Ω–∏–π —Ä–µ–π—Ç–∏–Ω–≥: {full_result.get('average_rating', 'N/A')}/5")
                
                full_success = True
            else:
                print("‚ùå –ü–û–õ–ù–´–ô –ê–ù–ê–õ–ò–ó –ù–ï –í–´–ü–û–õ–ù–ï–ù")
                full_success = False
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
            print("\nüíæ –°–û–•–†–ê–ù–ï–ù–ò–ï –†–ï–ó–£–õ–¨–¢–ê–¢–û–í")
            print("-" * 40)
            
            timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            result_file = f"ozon_html_result_{timestamp}.json"
            with open(result_file, "w", encoding="utf-8") as f:
                json.dump(full_result, f, ensure_ascii=False, indent=2)
            print(f"‚úÖ –ü–æ–ª–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤: {result_file}")
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–ª—å–∫–æ –æ—Ç–∑—ã–≤—ã
            if reviews:
                reviews_file = f"ozon_html_reviews_{timestamp}.json"
                with open(reviews_file, "w", encoding="utf-8") as f:
                    json.dump(reviews, f, ensure_ascii=False, indent=2)
                print(f"‚úÖ –û—Ç–∑—ã–≤—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: {reviews_file}")
            
            # –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
            print("\n" + "=" * 50)
            print("üìä –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢ HTML –ü–ê–†–°–ï–†–ê")
            print("=" * 50)
            
            print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–∏–µ HTML: {'–£–°–ü–ï–®–ù–û' if html_success else '–ù–ï–£–î–ê–ß–ù–û'}")
            print(f"‚úÖ –ü–∞—Ä—Å–∏–Ω–≥ —Ü–µ–Ω—ã: {'–£–°–ü–ï–®–ù–û' if price_success else '–ù–ï–£–î–ê–ß–ù–û'}")
            print(f"‚úÖ –ü–∞—Ä—Å–∏–Ω–≥ –æ—Ç–∑—ã–≤–æ–≤: {'–£–°–ü–ï–®–ù–û' if reviews_success else '–ù–ï–£–î–ê–ß–ù–û'}")
            print(f"‚úÖ –ü–æ–ª–Ω—ã–π –∞–Ω–∞–ª–∏–∑: {'–£–°–ü–ï–®–ù–û' if full_success else '–ù–ï–£–î–ê–ß–ù–û'}")
            
            success_count = sum([html_success, price_success, reviews_success, full_success])
            total_tests = 4
            
            print(f"\nüéØ –û–ë–©–ò–ô –†–ï–ó–£–õ–¨–¢–ê–¢: {success_count}/{total_tests} —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–π–¥–µ–Ω–æ")
            
            if success_count == total_tests:
                print("üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´! HTML –ø–∞—Ä—Å–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç –æ—Ç–ª–∏—á–Ω–æ!")
                print("‚úÖ 403 –∞–Ω—Ç–∏–±–æ—Ç —É—Å–ø–µ—à–Ω–æ –æ–±–æ–π–¥–µ–Ω —á–µ—Ä–µ–∑ HTML –ø–∞—Ä—Å–∏–Ω–≥!")
            elif success_count > 2:
                print("‚úÖ –•–û–†–û–®–ò–ô –†–ï–ó–£–õ–¨–¢–ê–¢! HTML –ø–∞—Ä—Å–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç!")
                print("üí° –ë–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ —Ñ—É–Ω–∫—Ü–∏–π —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
            elif success_count > 0:
                print("‚ö†Ô∏è –ß–ê–°–¢–ò–ß–ù–´–ô –£–°–ü–ï–•! –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–∞–±–æ—Ç–∞—é—Ç")
                print("üí° HTML –ø–æ–ª—É—á–µ–Ω, –Ω–æ –ø–∞—Ä—Å–∏–Ω–≥ —Ç—Ä–µ–±—É–µ—Ç –¥–æ—Ä–∞–±–æ—Ç–∫–∏")
            else:
                print("‚ùå –í–°–ï –¢–ï–°–¢–´ –ü–†–û–í–ê–õ–ï–ù–´! HTML –ø–∞—Ä—Å–µ—Ä –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
                print("üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
                print("   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ø—Ä–æ–∫—Å–∏")
                print("   - –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ —Ç–æ–≤–∞—Ä –¥–æ—Å—Ç—É–ø–µ–Ω")
                print("   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ HTML —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã")
            
            return {
                'html_success': html_success,
                'price_success': price_success,
                'reviews_success': reviews_success,
                'full_success': full_success,
                'total_success': success_count,
                'result': full_result
            }
            
    except ImportError as e:
        print(f"‚ùå –û–®–ò–ë–ö–ê –ò–ú–ü–û–†–¢–ê: {e}")
        print("üí° –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ —Ñ–∞–π–ª utils/ozon_html_parser.py —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        return None
        
    except Exception as e:
        print(f"‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: {e}")
        import traceback
        print("\nüîç –î–ï–¢–ê–õ–ò –û–®–ò–ë–ö–ò:")
        traceback.print_exc()
        return None

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï HTML –ü–ê–†–°–ï–†–ê OZON")
    print(f"‚è∞ –í—Ä–µ–º—è: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    print()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    try:
        from bs4 import BeautifulSoup
        print("‚úÖ BeautifulSoup —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    except ImportError:
        print("‚ùå BeautifulSoup –ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù!")
        print("üí° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: pip install beautifulsoup4")
        return
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
    result = await test_html_parser()
    
    if result:
        print(f"\nüèÅ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û")
        print(f"üìä –£—Å–ø–µ—à–Ω–æ—Å—Ç—å: {result['total_success']}/4")
        
        if result['total_success'] >= 3:
            print("\nüéâ HTML –ü–ê–†–°–ï–† –†–ê–ë–û–¢–ê–ï–¢!")
            print("üí° –≠—Ç–æ—Ç –ø–æ–¥—Ö–æ–¥ –æ–±—Ö–æ–¥–∏—Ç 403 –∞–Ω—Ç–∏–±–æ—Ç!")
        else:
            print("\n‚ö†Ô∏è HTML –ø–∞—Ä—Å–µ—Ä —Ç—Ä–µ–±—É–µ—Ç –¥–æ—Ä–∞–±–æ—Ç–∫–∏")
    else:
        print(f"\n‚ùå –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ü–†–û–í–ê–õ–ï–ù–û")

if __name__ == "__main__":
    asyncio.run(main())
